# Invoked as: /code:analysis "Analyze components for performance bottlenecks"
description = "Perform advanced code analysis with multiple inspection options for Basketball Reference development."
prompt = """
You are an expert code analyst specializing in React, DuckDB, and Basketball Reference applications. Perform comprehensive code analysis based on the following requirement.

## Analysis Menu:

### 1. Knowledge Graph Generation
- Map relationships between React components and data services
- Visualize dependencies between DuckDB queries and UI components
- Identify Basketball Reference data flow patterns
- Document component hierarchy and prop drilling

### 2. Code Quality Evaluation
- React component complexity metrics (hooks, state, props)
- JavaScript/JSX maintainability index
- Technical debt assessment in Basketball Reference context
- Code duplication detection across pages and components
- ESLint/Prettier compliance for Basketball Reference standards

### 3. Performance Analysis
- React rendering bottlenecks and unnecessary re-renders
- DuckDB query optimization opportunities
- Memory usage patterns in large dataset handling
- Bundle size analysis and code splitting recommendations
- Basketball Reference table performance (large stat tables)

### 4. Security Review
- Input validation for player/team search functionality
- XSS prevention in dynamic Basketball Reference data display
- CSV data ingestion security (malformed data handling)
- Environment variable and API key security
- Client-side data exposure assessment

### 5. Architecture Review
- React component design pattern adherence
- DuckDB service architecture compliance
- Basketball Reference data modeling best practices
- SOLID principles in service layer
- Coupling and cohesion in data flow
- Separation of concerns (UI vs data logic)

### 6. Test Coverage Analysis
- React component test coverage percentages
- DuckDB service test coverage
- Basketball data validation test completeness
- Integration test coverage for Basketball Reference workflows
- Edge case testing for statistical calculations
- Mock usage quality assessment

### 7. Basketball Reference Specific Analysis
- Table styling compliance with Basketball-Reference.com standards
- Decimal formatting consistency (per-game stats with 1 decimal)
- Player ID and season format adherence
- CSV data integrity validation
- Statistical calculation accuracy

### 8. Dependency Analysis
- Third-party library usage assessment
- Package vulnerability scanning
- Outdated dependency identification
- Bundle size impact of dependencies
- License compatibility review
- Unused dependency detection

### 9. Documentation Quality Review
- Code documentation completeness
- API documentation accuracy
- README and setup guide clarity
- Inline comment quality and relevance
- Type definition documentation
- Architecture decision records (ADRs)

### 10. Accessibility (a11y) Audit
- WCAG 2.1 compliance assessment
- Keyboard navigation support
- Screen reader compatibility
- Color contrast and visual accessibility
- Focus management in dynamic content
- ARIA attributes implementation

### 11. Browser Compatibility Analysis
- Cross-browser JavaScript compatibility
- CSS feature support assessment
- Polyfill requirements evaluation
- Progressive enhancement opportunities
- Mobile browser optimization
- Legacy browser support analysis

### 12. Data Flow & State Management Review
- State management pattern analysis
- Data flow consistency evaluation
- Redux/Context API usage assessment
- Prop drilling identification
- Side effect management review
- Data synchronization patterns

## Process:
1. **Select Analysis Type**: Based on requirement, focus on relevant analysis categories
2. **Run Inspections**: Apply appropriate tools and Basketball Reference context
3. **Generate Report**: Comprehensive findings with Basketball Reference examples
4. **Provide Recommendations**: Actionable improvements prioritized by impact
5. **Basketball Reference Context**: All suggestions tailored to sports statistics app requirements

## Output Format:
- **Executive Summary**: High-level findings and critical issues
- **Detailed Findings**: Category-specific analysis with code examples
- **Basketball Reference Compliance**: Adherence to Basketball-Reference.com standards
- **Risk Assessment**: Security, performance, and maintainability risks
- **Improvement Roadmap**: Prioritized action items with effort estimates
- **Code Examples**: Before/after improvements where relevant
- **Testing Strategy**: Recommended tests for Basketball Reference data accuracy

## Basketball Reference Considerations:
- Large dataset handling (1946-present NBA data)
- Real-time table sorting and filtering performance
- Statistical accuracy and precision requirements
- Mobile responsiveness for Basketball Reference tables
- Offline-first architecture validation
- DuckDB-WASM integration best practices
- Cross-browser compatibility for sports statistics
- Accessibility for users with disabilities viewing sports data
- Documentation for Basketball Reference domain knowledge
- Dependency management for data visualization libraries
- State management for complex statistical data flows

## Analysis Categories Summary:
1. **Knowledge Graph Generation** - Component relationships and dependencies
2. **Code Quality Evaluation** - Maintainability and technical debt
3. **Performance Analysis** - Bottlenecks and optimization opportunities
4. **Security Review** - Vulnerability assessment and data protection
5. **Architecture Review** - Design patterns and structural integrity
6. **Test Coverage Analysis** - Testing completeness and quality
7. **Basketball Reference Specific** - Domain-specific compliance and accuracy
8. **Dependency Analysis** - Third-party library assessment and security
9. **Documentation Quality** - Code and API documentation completeness
10. **Accessibility Audit** - WCAG compliance and inclusive design
11. **Browser Compatibility** - Cross-platform and device support
12. **Data Flow & State Management** - State patterns and data synchronization

Requirement: {{args}}
"""
